Token: Separator          Lexeme: %%
	 <Rat21SU> ::= %% <Opt Declaration List> <Statement List> %%
Token: Keyword          Lexeme: integer
	 <Opt Declaration List> ::= <Declaration List>  |  <Empty>
	 <Declaration List> ::= <Declaration> ; <Declaration List P>
	 <Declaration> ::= <Qualifier> <identifier> 
	 <Qualifier> ::= integer
Token: Identifier          Lexeme: a
Token: Separator          Lexeme: ;
Token: Keyword          Lexeme: integer
	 <Declaration List P> ::= <Declaration List>  |  <Empty>
	 <Declaration List> ::= <Declaration> ; <Declaration List P>
	 <Declaration> ::= <Qualifier> <identifier> 
	 <Qualifier> ::= integer
Token: Identifier          Lexeme: b
Token: Separator          Lexeme: ;
Token: Keyword          Lexeme: integer
	 <Declaration List P> ::= <Declaration List>  |  <Empty>
	 <Declaration List> ::= <Declaration> ; <Declaration List P>
	 <Declaration> ::= <Qualifier> <identifier> 
	 <Qualifier> ::= integer
Token: Identifier          Lexeme: temp
Token: Separator          Lexeme: ;
Token: Identifier          Lexeme: a
	 <Declaration List P> ::= <Declaration List>  |  <Empty>
	 <Declaration List P> ::= <Empty>
	 <Statement List> ::= <Statement> <Statement List P>
	 <Statement> ::= <Assign>
	 <Assign> ::= <Identifier> = <Expression> ;
Token: Operator          Lexeme: =
Token: Integer          Lexeme: 50
	 <Expression> ::= <Term> <Expression P>
	 <Term> ::= <Factor> <Term P>
	 <Factor> ::= <Primary>
	 <Primary> ::= <Integer>
Token: Separator          Lexeme: ;
	 <Term P> ::= <Empty>
	 <Expression P> ::= <Empty>
Token: Identifier          Lexeme: b
	 <Statement List P> ::= <Statement List>
	 <Statement List> ::= <Statement> <Statement List P>
	 <Statement> ::= <Assign>
	 <Assign> ::= <Identifier> = <Expression> ;
Token: Operator          Lexeme: =
Token: Integer          Lexeme: 2
	 <Expression> ::= <Term> <Expression P>
	 <Term> ::= <Factor> <Term P>
	 <Factor> ::= <Primary>
	 <Primary> ::= <Integer>
Token: Separator          Lexeme: ;
	 <Term P> ::= <Empty>
	 <Expression P> ::= <Empty>
Token: Identifier          Lexeme: temp
	 <Statement List P> ::= <Statement List>
	 <Statement List> ::= <Statement> <Statement List P>
	 <Statement> ::= <Assign>
	 <Assign> ::= <Identifier> = <Expression> ;
Token: Operator          Lexeme: =
Token: Identifier          Lexeme: a
	 <Expression> ::= <Term> <Expression P>
	 <Term> ::= <Factor> <Term P>
	 <Factor> ::= <Primary>
	 <Primary> ::= <Identifier>
Token: Separator          Lexeme: ;
	 <Term P> ::= <Empty>
	 <Expression P> ::= <Empty>
Token: Identifier          Lexeme: a
	 <Statement List P> ::= <Statement List>
	 <Statement List> ::= <Statement> <Statement List P>
	 <Statement> ::= <Assign>
	 <Assign> ::= <Identifier> = <Expression> ;
Token: Operator          Lexeme: =
Token: Identifier          Lexeme: b
	 <Expression> ::= <Term> <Expression P>
	 <Term> ::= <Factor> <Term P>
	 <Factor> ::= <Primary>
	 <Primary> ::= <Identifier>
Token: Separator          Lexeme: ;
	 <Term P> ::= <Empty>
	 <Expression P> ::= <Empty>
Token: Identifier          Lexeme: b
	 <Statement List P> ::= <Statement List>
	 <Statement List> ::= <Statement> <Statement List P>
	 <Statement> ::= <Assign>
	 <Assign> ::= <Identifier> = <Expression> ;
Token: Operator          Lexeme: =
Token: Identifier          Lexeme: temp
	 <Expression> ::= <Term> <Expression P>
	 <Term> ::= <Factor> <Term P>
	 <Factor> ::= <Primary>
	 <Primary> ::= <Identifier>
Token: Separator          Lexeme: ;
	 <Term P> ::= <Empty>
	 <Expression P> ::= <Empty>
Token: Separator          Lexeme: %%
	 <Statement List P> ::= <Empty>
